Resources:
  MyALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ALB-ahim
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref MyALBSecurityGroup
      Scheme: internet-facing
      Type: application
  InstitutionTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: institution-TG-ahim
      Protocol: HTTP
      Port: 8080
      VpcId: !Ref MyVPC
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPort: "8080"
      HealthCheckPath: /institutions/actuator/health
      Matcher:
        HttpCode: "200"
  StudentTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: student-TG-ahim
      Protocol: HTTP
      Port: 8080
      VpcId: !Ref MyVPC
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPort: "8080"
      HealthCheckPath: /students/actuator/health
      Matcher:
        HttpCode: "200"
  CompanyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: company-TG-ahim
      Protocol: HTTP
      Port: 8080
      VpcId: !Ref MyVPC
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPort: "8080"
      HealthCheckPath: /companies/actuator/health
      Matcher:
        HttpCode: "200"
  MyALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref MyALB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref StudentTargetGroup
  MyALBListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - MyALB
      - StudentTargetGroup
    Properties:
      LoadBalancerArn: !Ref MyALB
      Protocol: HTTPS
      Port: 443
      Certificates:
        - CertificateArn: ${self:custom.customDomain.certificateArn}
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref StudentTargetGroup
  InstitutionPathRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref MyALBListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - "/v1/institutions/*"
            - "/institutions/actuator/*"
      Actions:
        - Type: forward
          TargetGroupArn: !Ref InstitutionTargetGroup
  StudentPathRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref MyALBListener
      Priority: 2
      Conditions:
        - Field: path-pattern
          Values:
            - "/v1/students/*"
            - "/students/actuator/*"
      Actions:
        - Type: forward
          TargetGroupArn: !Ref StudentTargetGroup
  CompanyPathRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref MyALBListener
      Priority: 3
      Conditions:
        - Field: path-pattern
          Values:
            - "/v1/companies/*"
            - "/companies/actuator/*"
      Actions:
        - Type: forward
          TargetGroupArn: !Ref CompanyTargetGroup
