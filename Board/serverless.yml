service: board

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  environment:
    BOARD_TABLE: "course-board"
    COMMENT_TABLE: "comment"
    REGION: ${aws:region}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.BOARD_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.BOARD_TABLE}/index/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COMMENT_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.COMMENT_TABLE}/index/*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

functions:
  createBoard:
    handler: lambda/board/createBoard.handler
    events:
      - httpApi:
          path: /v1/courseProvide
          method: POST
  getBoard:
    handler: lambda/board/getBoard.handler
    events:
      - httpApi:
          path: /v1/{id}
          method: GET

  getBoardsByUser:
    handler: lambda/board/getBoardsByUser.handler
    events:
      - httpApi:
          path : /v1/userName/{userName}
          method: GET

  getBoardsByCourseProvide:
    handler: lambda/board/getBoardsByCourseProvide.handler
    events:
      - httpApi:
          path : /v1/courseProvide/{courseProvideId}/{type}
          method: GET

  getBoardsByInstitution:
    handler: lambda/board/getBoardsByInstitution.handler
    events:
      - httpApi:
          path : /v1/institution/{institutionId}/{type}
          method: GET

  updateBoard:
    handler: lambda/board/updateBoard.handler
    events:
      - httpApi:
          path: /v1/courseProvide/{id}
          method: PATCH

  deleteBoard:
    handler: lambda/board/deleteBoard.handler
    events:
      - httpApi:
          path: /v1/courseProvide/{id}
          method: DELETE

  createComment:
    handler: lambda/comment/createComment.handler
    events:
      - httpApi:
          path: /v1/{boardId}/comment
          method: POST

  getComments:
    handler: lambda/comment/getComments.handler
    events:
      - httpApi:
          path: /v1/{boardId}/comments
          method: GET
  updateComment:
    handler: lambda/comment/updateComment.handler
    events:
      - httpApi:
          path: /v1/comment/{id}
          method: PATCH
  deleteComment:
    handler: lambda/comment/deleteComment.handler
    events:
      - httpApi:
          path: /v1/comment/{id}
          method: DELETE
resources:
  Resources:
    CourseBoardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BOARD_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: userName
            AttributeType: S
          - AttributeName: courseProvideId
            AttributeType: S
          - AttributeName: institutionId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: userName
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: CourseProvideIndex
            KeySchema:
              - AttributeName: courseProvideId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: InstitutionIndex
            KeySchema:
              - AttributeName: institutionId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    CommentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.COMMENT_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: boardId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: BoardIdIndex
            KeySchema:
              - AttributeName: boardId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: IdIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST


package:
  patterns:
    - "!node_modules/.bin/**"
    - "node_modules/**"
    - "lambda/**"
    - "aws-clients.mjs"
  individually: false

custom:
  esbuild:
    bundle: true
    minify: false
    format: esm
    sourcemap: true
    target: node20
    platform: node
    outExtension:
      ".js": ".mjs"
    mainFields:
      - module
      - main
