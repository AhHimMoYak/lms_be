service: course-board

frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  environment:
    DYNAMODB_TABLE: ${self:service}
    REGION: ${aws:region}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
            - "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*"
            - "arn:aws:dynamodb:${aws:region}:*:table/comments"
            - "arn:aws:dynamodb:${aws:region}:*:table/comments/index/*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
MyApiMapping:
  Type: 'AWS::ApiGatewayV2::ApiMapping'
  Properties:
    DomainName: api.ahimmoyak.click
    ApiMappingKey: 'v1.board'
    ApiId: !Ref MyApi
    Stage: !Ref MyStage
functions:
  createBoard:
    handler: courseBoard.createBoard
    events:
      - httpApi:
          path: /courseProvide
          method: POST
  getBoard:
    handler: courseBoard.getBoard
    events:
      - httpApi:
          path: /{id}/{createdAt}
          method: GET

  getBoardsByUser:
    handler: courseBoard.getBoardsByUser
    events:
      - httpApi:
          path : /userName/{userName}
          method: GET

  getBoardsByCourseProvide:
    handler: courseBoard.getBoardsByCourseProvide
    events:
      - httpApi:
          path : /courseProvide/{courseProvideId}/{type}
          method: GET

  updateBoard:
    handler: courseBoard.updateBoard
    events:
      - httpApi:
          path: /courseProvide/{id}/{createdAt}
          method: PATCH

  deleteBoard:
    handler: courseBoard.deleteBoard
    events:
      - httpApi:
          path: /courseProvide/{id}/{createdAt}
          method: DELETE

  createComment:
    handler: comment.createComment
    events:
      - httpApi:
          path: /comment
          method: POST

  getComments:
    handler: comment.getComments
    events:
      - httpApi:
          path: /{boardId}/comments
          method: GET
  updateComment:
    handler: comment.updateComment
    events:
      - httpApi:
          path: /comment/{id}/{createdAt}
          method: PATCH
  deleteComment:
    handler: comment.deleteComment
    events:
      - httpApi:
          path: /comment/{id}/{createdAt}
          method: DELETE
resources:
  Resources:
    CourseBoardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
          - AttributeName: userName
            AttributeType: S
          - AttributeName: institutionId
            AttributeType: S
          - AttributeName: courseProvideId
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: UserIndex
            KeySchema:
              - AttributeName: userName
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: InstitutionIndex
            KeySchema:
              - AttributeName: institutionId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: CourseProvideIndex
            KeySchema:
              - AttributeName: courseProvideId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: TypeIndex
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
    CommentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: comments
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: boardId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: BoardIdIndex
            KeySchema:
              - AttributeName: boardId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

package:
  patterns:
    - "!node_modules/.bin/**"
    - "node_modules/**"
    - "courseBoard.mjs"
  individually: false

custom:
  esbuild:
    bundle: true
    minify: false
    format: esm
    sourcemap: true
    target: node20
    platform: node
    outExtension:
      ".js": ".mjs"
    mainFields:
      - module
      - main
